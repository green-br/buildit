diff --git a/util/chplenv/chpl_home_utils.py b/util/chplenv/chpl_home_utils.py
index 5d85153835..b08fc2fc93 100644
--- a/util/chplenv/chpl_home_utils.py
+++ b/util/chplenv/chpl_home_utils.py
@@ -54,6 +54,45 @@ install_path_regex = re.compile(
                                                   os.path.sep,
                                                   os.path.sep))

+@memoize
+def get_chpl_configured_install_lib_prefix():
+    # gets the path to the lib directory for a prefix install, or None if not
+    # a prefix install
+    chpl_home = str(os.getenv("CHPL_HOME"))
+    if os.path.exists(os.path.join(chpl_home, "configured-prefix")):
+        with open(os.path.join(chpl_home, "CMakeLists.txt"), "r") as f:
+            # read CMakeLists.txt to get the CHPL_MAJOR_VERSION and
+            # CHPL_MINOR_VERSION and then construct the path from that
+            chpl_major_version = None
+            chpl_minor_version = None
+            for line in f:
+                if "set(CHPL_MAJOR_VERSION" in line:
+                    chpl_major_version = line.split()[1].strip(")")
+                if "set(CHPL_MINOR_VERSION" in line:
+                    chpl_minor_version = line.split()[1].strip(")")
+                if (
+                    chpl_major_version is not None
+                    and chpl_minor_version is not None
+                ):
+                    break
+        assert chpl_major_version is not None and chpl_minor_version is not None
+        chpl_version_string = "{}.{}".format(
+            chpl_major_version,
+            chpl_minor_version,
+        )
+        chpl_prefix = None
+        with open(os.path.join(chpl_home, "configured-prefix"), "r") as f:
+            chpl_prefix = f.read().strip()
+        assert chpl_prefix != "" and chpl_prefix is not None
+        return os.path.join(
+            chpl_prefix,
+            "lib",
+            "chapel",
+            chpl_version_string,
+            "compiler",
+        )
+    return None
+
 @memoize
 def get_chpl_version_from_install():
     if get_prefix_install_prefix():
@@ -189,6 +228,8 @@ def _main():
     )
     parser.add_option('--using-module', action='store_const',
                       dest='func', const=using_chapel_module)
+    parser.add_option('--configured-install-lib-prefix', action='store_const',
+                      dest='func', const=get_chpl_configured_install_lib_prefix)
     (options, args) = parser.parse_args()

     if options.func:

diff --git a/tools/chapel-py/setup.py b/tools/chapel-py/setup.py
index 0f3dd9fea0..9be2a48cff 100644
--- a/tools/chapel-py/setup.py
+++ b/tools/chapel-py/setup.py
@@ -47,6 +47,18 @@ host_cxx = str(chpl_variables.get("CHPL_HOST_CXX"))

 host_bin_subdir = str(chpl_variables.get("CHPL_HOST_BIN_SUBDIR"))
 chpl_lib_path = os.path.join(chpl_home, "lib", "compiler", host_bin_subdir)
+# For installations using --prefix, the build and final lib paths are going to
+#  differ. figure out the install location now and write it to the rpath
+chpl_home_utils = os.path.join(
+    chpl_home, "util", "chplenv", "chpl_home_utils.py"
+)
+chpl_install_lib_path = (
+    subprocess.check_output(
+        ["python", chpl_home_utils, "--configured-install-lib-prefix"],
+    )
+    .decode(sys.stdout.encoding)
+    .strip()
+)

 CXXFLAGS = []
 if have_llvm and have_llvm != "none":
@@ -64,11 +76,16 @@ CXXFLAGS += ["-std=c++17", "-I{}/frontend/include".format(chpl_home)]
 LDFLAGS = []
 LDFLAGS += [
     "-L{}".format(chpl_lib_path),
+    "-Wl,-rpath,{}".format(chpl_lib_path),
     "-lChplFrontendShared",
-    "-Wl,-rpath",
-    chpl_lib_path,
 ]

+if chpl_install_lib_path != "None":
+    LDFLAGS += [
+        "-L{}".format(chpl_install_lib_path),
+        "-Wl,-rpath,{}".format(chpl_install_lib_path),
+    ]
+
 os.environ["CC"] = host_cc
 os.environ["CXX"] = host_cxx
 setup(
